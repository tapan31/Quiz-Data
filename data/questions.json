{
  "questions": [
    {
      "question": "Which is the most popular JavaScript framework?",
      "options": [
        "Angular",
        "React",
        "Svelte",
        "Vue"
      ],
      "correctOption": 1,
      "points": 10,
      "difficulty": "easy"
    },
    {
      "question": "Which company invented React?",
      "options": [
        "Google",
        "Apple",
        "Netflix",
        "Facebook"
      ],
      "correctOption": 3,
      "points": 10,
      "difficulty": "easy"
    },
    {
      "question": "What's the fundamental building block of React apps?",
      "options": [
        "Components",
        "Blocks",
        "Elements",
        "Effects"
      ],
      "correctOption": 0,
      "points": 10,
      "difficulty": "easy"
    },
    {
      "question": "What's the name of the syntax we use to describe the UI in React components?",
      "options": [
        "FBJ",
        "Babel",
        "JSX",
        "ES2015"
      ],
      "correctOption": 2,
      "points": 10,
      "difficulty": "easy"
    },
    {
      "question": "How does data flow naturally in React apps?",
      "options": [
        "From parents to children",
        "From children to parents",
        "Both ways",
        "The developers decide"
      ],
      "correctOption": 0,
      "points": 10,
      "difficulty": "easy"
    },
    {
      "question": "How to pass data into a child component?",
      "options": [
        "State",
        "Props",
        "PropTypes",
        "Parameters"
      ],
      "correctOption": 1,
      "points": 10,
      "difficulty": "easy"
    },
    {
      "question": "When to use derived state?",
      "options": [
        "Whenever the state should not trigger a re-render",
        "Whenever the state can be synchronized with an effect",
        "Whenever the state should be accessible to all components",
        "Whenever the state can be computed from another state variable"
      ],
      "correctOption": 3,
      "points": 30,
      "difficulty": "hard"
    },
    {
      "question": "What triggers a UI re-render in React?",
      "options": [
        "Running an effect",
        "Passing props",
        "Updating state",
        "Adding event listeners to DOM elements"
      ],
      "correctOption": 2,
      "points": 20,
      "difficulty": "medium"
    },
    {
      "question": "When do we directly 'touch' the DOM in React?",
      "options": [
        "When we need to listen to an event",
        "When we need to change the UI",
        "When we need to add styles",
        "Almost never"
      ],
      "correctOption": 3,
      "points": 20,
      "difficulty": "medium"
    },
    {
      "question": "In what situation do we use a callback to update state?",
      "options": [
        "When updating the state will be slow",
        "When the updated state is very data-intensive",
        "When the state update should happen faster",
        "When the new state depends on the previous state"
      ],
      "correctOption": 3,
      "points": 30,
      "difficulty": "hard"
    },
    {
      "question": "If we pass a function to useState, when will that function be called?",
      "options": [
        "On each re-render",
        "Each time we update the state",
        "Only on the initial render",
        "The first time we update the state"
      ],
      "correctOption": 2,
      "points": 30,
      "difficulty": "hard"
    },
    {
      "question": "Which hook to use for an API request on the component's initial render?",
      "options": [
        "useState",
        "useEffect",
        "useRef",
        "useReducer"
      ],
      "correctOption": 1,
      "points": 10,
      "difficulty": "easy"
    },
    {
      "question": "Which variables should go into the useEffect dependency array?",
      "options": [
        "Usually none",
        "All our state variables",
        "All state and props referenced in the effect",
        "All variables needed for cleanup"
      ],
      "correctOption": 2,
      "points": 30,
      "difficulty": "hard"
    },
    {
      "question": "An effect will always run on the initial render.",
      "options": [
        "True",
        "It depends on the dependency array",
        "False",
        "It depends on the code in the effect"
      ],
      "correctOption": 0,
      "points": 30,
      "difficulty": "hard"
    },
    {
      "question": "When will an effect run if it doesn't have a dependency array?",
      "options": [
        "Only when the component mounts",
        "Only when the component unmounts",
        "The first time the component re-renders",
        "Each time the component is re-rendered"
      ],
      "correctOption": 3,
      "points": 20,
      "difficulty": "medium"
    },
    {
      "question": "Which method is used to handle asynchronous operations in JavaScript?",
      "options": [
        "async/await",
        "Promise",
        "Callback functions",
        "setTimeout"
      ],
      "correctOption": 0,
      "points": 10,
      "difficulty": "easy"
    },
    {
      "question": "What does the 'npm' stand for?",
      "options": [
        "Node Package Manager",
        "New Project Manager",
        "Node Project Manager",
        "Necessary Package Manager"
      ],
      "correctOption": 0,
      "points": 10,
      "difficulty": "easy"
    },
    {
      "question": "Which method is used to remove the last element from an array in JavaScript?",
      "options": [
        "pop()",
        "splice()",
        "slice()",
        "shift()"
      ],
      "correctOption": 0,
      "points": 10,
      "difficulty": "easy"
    },
    {
      "question": "What is the purpose of the 'use strict' directive in JavaScript?",
      "options": [
        "To enable strict mode",
        "To make the code run faster",
        "To allow more relaxed coding",
        "To disable strict mode"
      ],
      "correctOption": 0,
      "points": 10,
      "difficulty": "medium"
    },
    {
      "question": "Which of the following is not a primitive data type in JavaScript?",
      "options": [
        "number",
        "boolean",
        "object",
        "string"
      ],
      "correctOption": 2,
      "points": 10,
      "difficulty": "medium"
    },
    {
      "question": "What is the purpose of the 'this' keyword in JavaScript?",
      "options": [
        "Refers to the current function",
        "Refers to the parent function",
        "Refers to the calling function",
        "Refers to the global object"
      ],
      "correctOption": 2,
      "points": 10,
      "difficulty": "medium"
    },
    {
      "question": "What is the purpose of the 'map' function in JavaScript?",
      "options": [
        "To create a new array by manipulating each element of an existing array",
        "To remove elements from an array",
        "To filter elements from an array",
        "To sort the elements of an array"
      ],
      "correctOption": 0,
      "points": 10,
      "difficulty": "medium"
    },
    {
      "question": "In JavaScript, what is the 'Event Loop' responsible for?",
      "options": [
        "Handling asynchronous operations",
        "Handling user interface events",
        "Handling error messages",
        "Handling API requests"
      ],
      "correctOption": 0,
      "points": 20,
      "difficulty": "hard"
    },
    {
      "question": "What is the difference between 'let' and 'const' in JavaScript?",
      "options": [
        "let is block-scoped, const is function-scoped",
        "let can be reassigned, const cannot be reassigned",
        "let can be used for primitive types, const can be used for objects",
        "let has a higher priority than const"
      ],
      "correctOption": 1,
      "points": 20,
      "difficulty": "hard"
    },
    {
      "question": "What is the purpose of the 'reduce' function in JavaScript?",
      "options": [
        "To create a new array by manipulating each element of an existing array",
        "To combine elements of an array into a single value",
        "To remove elements from an array",
        "To filter elements from an array"
      ],
      "correctOption": 1,
      "points": 20,
      "difficulty": "hard"
    },
    {
      "question": "What does the term 'hoisting' refer to in JavaScript?",
      "options": [
        "The process of lifting objects in the DOM",
        "The automatic moving of declarations to the top of the current scope",
        "The technique of handling asynchronous operations",
        "The way functions handle errors"
      ],
      "correctOption": 1,
      "points": 20,
      "difficulty": "hard"
    },
    {
      "question": "What is the purpose of the 'bind' method in JavaScript?",
      "options": [
        "To create a new array",
        "To bind a function to a specific context",
        "To sort an array",
        "To filter elements from an array"
      ],
      "correctOption": 1,
      "points": 20,
      "difficulty": "hard"
    },
    {
      "question": "In JavaScript, what is the 'prototype' property used for?",
      "options": [
        "To store the prototype of an object",
        "To define the prototype of a function",
        "To link objects to their prototype",
        "To create a new instance of an object"
      ],
      "correctOption": 2,
      "points": 20,
      "difficulty": "hard"
    },
    {
      "question": "What is the purpose of the 'Symbol' data type in JavaScript?",
      "options": [
        "To represent mathematical symbols",
        "To create unique identifiers",
        "To define custom symbols for user interfaces",
        "To perform bitwise operations"
      ],
      "correctOption": 1,
      "points": 20,
      "difficulty": "hard"
    },
    {
      "question": "What is the 'call stack' in JavaScript?",
      "options": [
        "A data structure that stores function calls",
        "A stack for handling API requests",
        "A stack for handling asynchronous operations",
        "A mechanism for handling error messages"
      ],
      "correctOption": 0,
      "points": 20,
      "difficulty": "hard"
    },
    {
      "question": "What is the purpose of the 'try...catch' statement in JavaScript?",
      "options": [
        "To handle asynchronous operations",
        "To handle errors and exceptions",
        "To create a loop",
        "To define custom symbols for user interfaces"
      ],
      "correctOption": 1,
      "points": 20,
      "difficulty": "hard"
    },
    {
      "question": "How does the 'async/await' syntax work in JavaScript?",
      "options": [
        "It creates asynchronous functions",
        "It returns a Promise",
        "It allows sequential execution of asynchronous code",
        "It handles API requests"
      ],
      "correctOption": 2,
      "points": 20,
      "difficulty": "hard"
    },
    {
      "question": "What is the purpose of the 'fetch' function in JavaScript?",
      "options": [
        "To create a new array",
        "To make API requests and handle responses",
        "To remove elements from an array",
        "To filter elements from an array"
      ],
      "correctOption": 1,
      "points": 20,
      "difficulty": "hard"
    },
    {
      "question": "Which method is used to handle asynchronous operations in JavaScript?",
      "options": [
        "async/await",
        "Promise",
        "Callback functions",
        "setTimeout"
      ],
      "correctOption": 0,
      "points": 10,
      "difficulty": "easy"
    },
    {
      "question": "What does the 'npm' stand for?",
      "options": [
        "Node Package Manager",
        "New Project Manager",
        "Node Project Manager",
        "Necessary Package Manager"
      ],
      "correctOption": 0,
      "points": 10,
      "difficulty": "easy"
    },
    {
      "question": "Which method is used to remove the last element from an array in JavaScript?",
      "options": [
        "pop()",
        "splice()",
        "slice()",
        "shift()"
      ],
      "correctOption": 0,
      "points": 10,
      "difficulty": "easy"
    },
    {
      "question": "What is the purpose of the 'use strict' directive in JavaScript?",
      "options": [
        "To enable strict mode",
        "To make the code run faster",
        "To allow more relaxed coding",
        "To disable strict mode"
      ],
      "correctOption": 0,
      "points": 10,
      "difficulty": "medium"
    },
    {
      "question": "Which of the following is not a primitive data type in JavaScript?",
      "options": [
        "number",
        "boolean",
        "object",
        "string"
      ],
      "correctOption": 2,
      "points": 10,
      "difficulty": "medium"
    },
    {
      "question": "What is the purpose of the 'this' keyword in JavaScript?",
      "options": [
        "Refers to the current function",
        "Refers to the parent function",
        "Refers to the calling function",
        "Refers to the global object"
      ],
      "correctOption": 2,
      "points": 10,
      "difficulty": "medium"
    },
    {
      "question": "What is the purpose of the 'map' function in JavaScript?",
      "options": [
        "To create a new array by manipulating each element of an existing array",
        "To remove elements from an array",
        "To filter elements from an array",
        "To sort the elements of an array"
      ],
      "correctOption": 0,
      "points": 10,
      "difficulty": "medium"
    },
    {
      "question": "In JavaScript, what is the 'Event Loop' responsible for?",
      "options": [
        "Handling asynchronous operations",
        "Handling user interface events",
        "Handling error messages",
        "Handling API requests"
      ],
      "correctOption": 0,
      "points": 20,
      "difficulty": "hard"
    },
    {
      "question": "What is the difference between 'let' and 'const' in JavaScript?",
      "options": [
        "let is block-scoped, const is function-scoped",
        "let can be reassigned, const cannot be reassigned",
        "let can be used for primitive types, const can be used for objects",
        "let has a higher priority than const"
      ],
      "correctOption": 1,
      "points": 20,
      "difficulty": "hard"
    },
    {
      "question": "What is the purpose of the 'reduce' function in JavaScript?",
      "options": [
        "To create a new array by manipulating each element of an existing array",
        "To combine elements of an array into a single value",
        "To remove elements from an array",
        "To filter elements from an array"
      ],
      "correctOption": 1,
      "points": 20,
      "difficulty": "hard"
    },
    {
      "question": "What does the term 'hoisting' refer to in JavaScript?",
      "options": [
        "The process of lifting objects in the DOM",
        "The automatic moving of declarations to the top of the current scope",
        "The technique of handling asynchronous operations",
        "The way functions handle errors"
      ],
      "correctOption": 1,
      "points": 20,
      "difficulty": "hard"
    },
    {
      "question": "What is the purpose of the 'bind' method in JavaScript?",
      "options": [
        "To create a new array",
        "To bind a function to a specific context",
        "To sort an array",
        "To filter elements from an array"
      ],
      "correctOption": 1,
      "points": 20,
      "difficulty": "hard"
    },
    {
      "question": "In JavaScript, what is the 'prototype' property used for?",
      "options": [
        "To store the prototype of an object",
        "To define the prototype of a function",
        "To link objects to their prototype",
        "To create a new instance of an object"
      ],
      "correctOption": 2,
      "points": 20,
      "difficulty": "hard"
    },
    {
      "question": "What is the purpose of the 'Symbol' data type in JavaScript?",
      "options": [
        "To represent mathematical symbols",
        "To create unique identifiers",
        "To define custom symbols for user interfaces",
        "To perform bitwise operations"
      ],
      "correctOption": 1,
      "points": 20,
      "difficulty": "hard"
    },
    {
      "question": "What is the 'call stack' in JavaScript?",
      "options": [
        "A data structure that stores function calls",
        "A stack for handling API requests",
        "A stack for handling asynchronous operations",
        "A mechanism for handling error messages"
      ],
      "correctOption": 0,
      "points": 20,
      "difficulty": "hard"
    },
    {
      "question": "What is the purpose of the 'try...catch' statement in JavaScript?",
      "options": [
        "To handle asynchronous operations",
        "To handle errors and exceptions",
        "To create a loop",
        "To define custom symbols for user interfaces"
      ],
      "correctOption": 1,
      "points": 20,
      "difficulty": "hard"
    },
    {
      "question": "How does the 'async/await' syntax work in JavaScript?",
      "options": [
        "It creates asynchronous functions",
        "It returns a Promise",
        "It allows sequential execution of asynchronous code",
        "It handles API requests"
      ],
      "correctOption": 2,
      "points": 20,
      "difficulty": "hard"
    },
    {
      "question": "What is the purpose of the 'fetch' function in JavaScript?",
      "options": [
        "To create a new array",
        "To make API requests and handle responses",
        "To remove elements from an array",
        "To filter elements from an array"
      ],
      "correctOption": 1,
      "points": 20,
      "difficulty": "hard"
    },
    {
      "question": "What is JSX in React?",
      "options": [
        "A JavaScript framework",
        "A syntax extension for JavaScript",
        "A data structure in React",
        "A component lifecycle method"
      ],
      "correctOption": 1,
      "points": 10,
      "difficulty": "easy"
    },
    {
      "question": "What is the purpose of the 'key' prop in React lists?",
      "options": [
        "To set a unique identifier for a component",
        "To define the rendering order of components",
        "To specify the color of a component",
        "To control the state of a component"
      ],
      "correctOption": 0,
      "points": 10,
      "difficulty": "easy"
    },
    {
      "question": "Which method is used to render content conditionally in React?",
      "options": [
        "renderIf()",
        "conditionalRender()",
        "ifRender()",
        "Conditional rendering using JSX"
      ],
      "correctOption": 3,
      "points": 10,
      "difficulty": "easy"
    },
    {
      "question": "What is the purpose of the 'setState' method in React?",
      "options": [
        "To set the initial state of a component",
        "To update the state of a component",
        "To fetch data from an API",
        "To render a child component"
      ],
      "correctOption": 1,
      "points": 10,
      "difficulty": "easy"
    },
    {
      "question": "What is the significance of the 'componentDidMount' lifecycle method in React?",
      "options": [
        "It is called before rendering a component",
        "It is called after rendering a component",
        "It is used to unmount a component",
        "It is used to update the state of a component"
      ],
      "correctOption": 1,
      "points": 10,
      "difficulty": "easy"
    }
  ],
  "highscore": {
    "highscore": 80
  }
}